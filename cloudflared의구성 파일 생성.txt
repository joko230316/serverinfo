구성 파일 생성: ~/.cloudflared/config.yml 또는 ~/.cloudflared/config.yaml 파일을 생성하고 필요한 설정을 추가합니다.
ICMP 권한 설정: 사용자의 GID를 확인하고, 필요한 경우 시스템 관리자에게 요청하여 ping_group_range에 추가합니다.
인증서 파일 준비: cert.pem 파일을 생성하고 올바른 경로에 배치합니다.
sudo ss -tuln | grep :80    ->포트확인
sudo fuser -k 80/tcp        -> 포트 활동 중지


# 더 많은 연결 사용 (무료) **************
cloudflared tunnel --url http://localhost:80 --ha-connections 4

# 또는 구성 파일 생성
mkdir -p ~/.cloudflared/
nano ~/.cloudflared/config.yml

tunnel: your-tunnel-id
credentials-file: /home/your-username/.cloudflared/your-tunnel-id.json

ingress:
  - hostname: your-domain.trycloudflare.com
    service: http://localhost:80
    originRequest:
      connectTimeout: 30s
      tlsTimeout: 10s
      tcpKeepAlive: 30s
      noHappyEyeballs: false
      keepAliveConnections: 10
      keepAliveTimeout: 90s
  - service: http_status:404

#!/bin/bash
# deploy.sh - 프로덕션 배포 스크립트

# 가상환경 활성화 (있는 경우)
source venv/bin/activate

# 필요한 패키지 설치
pip install gunicorn

# 기존 프로세스 종료
pkill -f gunicorn

# Gunicorn으로 앱 실행
gunicorn -w 4 -b 127.0.0.1:8000 app:app --daemon

# Cloudflare Tunnel 실행
cloudflared tunnel --url http://localhost:8000